name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
#    - name: Setup .NET Core
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 3.1.301
    - name: Install dependencies
      run: |
        dotnet add PrimeService.Tests package GitHub.TestLogger -v 1.0.1 --no-restore
        dotnet add PrimeService.Tests package coverlet.collector -v 1.3.0 --no-restore
        dotnet restore
#        dotnet add PrimeService.Tests package coverlet.msbuild -v 2.9.0 --no-restore
      working-directory: ${{ github.workspace }}
    - name: Build
      run: dotnet build --no-restore
    - name: Run tests
      run: dotnet test --collect:"XPlat Code Coverage" --no-build --no-restore --logger "github;name=my-test-report;GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}" || cd .
      working-directory: ${{ github.workspace }}
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.5.8
      with:
        reports: 'coverage.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
        reporttypes: 'HtmlInline;Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
        sourcedirs: '' # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
        historydir: '' # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
        plugins: '' # Optional plugin files for custom reports or custom history storage (separated by semicolon).
        assemblyfilters: '+*' # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        classfilters: '+*' # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        filefilters: '+*' # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
        title: '' # Optional title.
        tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
#    - name: Fio benchmark
#      run: |
#         dotnet restore -v d
#        echo "Running FIO"
#        sudo apt-get update
#        sudo apt-get install fio
#        fio --randrepeat=1 --direct=1 --gtod_reduce=1 --name=test --bs=128k --iodepth=32 --readwrite=rw --rwmixread=75 --size=200M --filename=PhysicalDrive1 --thread=1
#        D:\a\MSTest-sample\MSTest-sample\fio --randrepeat=1 --direct=1 --gtod_reduce=1 --name=test --bs=128k --iodepth=32 --readwrite=rw --rwmixread=75 --size=200M --ioengine=windowsaio --filename=PhysicalDrive1 --thread=1
#       PowerShell Get-PsDrive -PsProvider FileSystem
      

